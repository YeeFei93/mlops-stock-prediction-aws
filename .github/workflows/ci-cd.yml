name: MLOps Stock Prediction CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  S3_BUCKET: mlops-stock-data-255945442255-us-east-1

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run tests
      run: |
        pytest tests/ --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  # Deployment job - deploys serverless Lambda functions
  # Only runs when commit message contains [deploy] and AWS secrets are configured
  deploy-serverless:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[deploy]')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install boto3 awscli
    
    - name: Deploy Lambda function
      run: |
        # Create deployment package for Lambda
        zip -r lambda-deployment.zip lambda_simple.py
        
        # Update Lambda function (if it exists)
        aws lambda update-function-code \
          --function-name mlops-stock-data-collector \
          --zip-file fileb://lambda-deployment.zip \
          --region ${{ env.AWS_REGION }} || echo "Lambda function not found, skipping update"
    
    - name: Test Lambda function
      run: |
        # Test the deployed Lambda function
        aws lambda invoke \
          --function-name mlops-stock-data-collector \
          --payload '{"symbols": ["AAPL", "GOOGL"]}' \
          --region ${{ env.AWS_REGION }} \
          response.json || echo "Lambda test failed, continuing"

  infrastructure:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[deploy-infra]')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Deploy CloudFormation stack
      run: |
        aws cloudformation deploy \
          --template-file infrastructure/cloudformation-template.yaml \
          --stack-name mlops-stock-prediction-stack \
          --parameter-overrides \
            Environment=prod \
            S3BucketName=$S3_BUCKET \
          --capabilities CAPABILITY_IAM \
          --region $AWS_REGION
