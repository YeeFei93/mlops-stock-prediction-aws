name: Daily AWS Resource Deployment (8AM Singapore Time)

on:
  # schedule:
  #   - cron: '0 0 * * *'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  S3_BUCKET: mlops-stock-data-255945442255-us-east-1

jobs:
  deploy:
    name: Deploy AWS Resources (CloudFormation)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Delete failed stack if exists
        run: |
          set -e
          STATUS=$(aws cloudformation describe-stacks --stack-name mlops-stock-prediction-stack --region $AWS_REGION --query "Stacks[0].StackStatus" --output text 2>/dev/null || echo "NOT_FOUND")
          if [ "$STATUS" = "ROLLBACK_COMPLETE" ]; then
            echo "Deleting failed stack..."
            aws cloudformation delete-stack --stack-name mlops-stock-prediction-stack --region $AWS_REGION
            echo "Waiting for stack deletion..."
            aws cloudformation wait stack-delete-complete --stack-name mlops-stock-prediction-stack --region $AWS_REGION
          else
            echo "No failed stack to delete. Status: $STATUS"
          fi
      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file infrastructure/cloudformation-template.yaml \
            --stack-name mlops-stock-prediction-stack \
            --parameter-overrides \
              Environment=prod \
              S3BucketName=$S3_BUCKET \
            --capabilities CAPABILITY_IAM \
            --region $AWS_REGION

  notify:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Send success notification
        if: needs.deploy.result == 'success'
        run: |
          echo "✅ CloudFormation deployment completed successfully at $(date)"
          # Add webhook/email notification here if needed
      - name: Send failure notification
        if: needs.deploy.result == 'failure'
        run: |
          echo "❌ CloudFormation deployment failed at $(date)"
          # Add webhook/email notification here if needed
